#/* vim:set ts=2 nowrap: ****************************************************
#
# qutselect - A simple Qt4 based GUI frontend for SRSS (utselect)
# Copyright (C) 2009 by Jens Langner <Jens.Langner@light-speed.de>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# $Id$
#
#**************************************************************************/

# main variables
TEMPLATE		= app
CONFIG		 *= qt thread no_mocdepend warn_on @ANSI_COLOR@ @QTLINK_LEVEL@
QT					= gui core network
QMAKE_QMAKE = @QMAKE_PATH@
TARGET			= qutselect
VERSION			= @PACKAGE_VERSION@
DESTDIR			= ../

# directory specification
OBJECTS_DIR = .obj
MOC_DIR			= .moc
UI_DIR			= .ui

# define headers and source files for compilation
DEPENDPATH  = . includes
INCLUDEPATH = . includes

# own QMAKE Flags definitions
QMAKE_CXXFLAGS_RELEASE = @CXXFLAGS@
QMAKE_CXXFLAGS_DEBUG	 = @CXXFLAGS@

# set the config to either release or debug
COMPILE_LEVEL = @COMPILE_LEVEL@
contains(COMPILE_LEVEL, debug) {
	CONFIG -= release
	CONFIG *= debug
	QMAKE_CXXFLAGS_DEBUG *= -ggdb -O0
	DEFINES *= DEBUG
}
else {
	CONFIG -= debug
	CONFIG *= release
	QMAKE_CXXFLAGS_RELEASE *= -O3 -fomit-frame-pointer -funroll-loops
	QMAKE_LINK *= -s
	DEFINES -= DEBUG
}

### QT LIB ################################################################
# if "staticqt" is specificed in the CONFIG variable (by configure)
# we link with the static QT library instead
staticqt {
	QMAKE_LIBS_QT =
	QMAKE_LIBS_QT_THREAD =
	!macx:LIBS *= $(QTDIR)/lib/libqt-mt.a
	macx:LIBS *= $(QTDIR)/lib/libqt-mt.a -lz -framework Carbon
}

### LIBRTDEBUG ############################################################
# if "staticrtdebug" is specified in the CONFIG variable (by configure)
# we link wih the static variant of librtdebug instead
INCLUDEPATH *= @RTDEBUG_INCDIR@
contains(DEFINES, DEBUG) {
        staticrtdebug {
                LIBS *= @RTDEBUG_LIBDIR@/librtdebug.a
        }
        else {
                LIBS *= -L@RTDEBUG_LIBDIR@ @LIB_RTDEBUG@
        }
}

# find out the GCC version
# and define some gcc v3+ options only.
GCC_VERSION = @GCC_VERSION@
contains(GCC_VERSION, 3) {
	QMAKE_CXXFLAGS *= -fmessage-length=0
}

# find out the system
HOST_OS=@HOST_OS@
HOST_CPU=@HOST_CPU@
contains(HOST_CPU, sparc) {
	QMAKE_CXXFLAGS *= -mcpu=v9 -mtune=ultrasparc3
}
else {
	contains(HOST_CPU, [pP]ower[pP]c) {
      QMAKE_CXXFLAGS *= -Acpu=powerpc -mcpu=G4
  }
  else {
		contains(HOST_CPU, [oO]pteron.+) {			
			QMAKE_CXXFLAGS *= -Acpu=amd64 -march=opteron
		}
	}
}

# override the compile output
QMAKE_CXX  = @echo \'  CC   $<\'; $$QMAKE_CXX
QMAKE_LINK = @echo \'  LD   $@\'; $$QMAKE_LINK
QMAKE_MOC  = @echo \'  MOC  $@\'; $$QMAKE_MOC

# use ANSI colors if it was specified on configure time
ansi_color {
  DEFINES *= ANSI_COLOR
}
else {
  DEFINES -= ANSI_COLOR
}

# Input
RESOURCES = qutselect.qrc
TRANSLATIONS = lang/qutselect_de.ts

HEADERS = CApplication.h \
					CMainWindow.h
           
SOURCES = main.cpp \
					CApplication.cpp \
					CMainWindow.cpp
