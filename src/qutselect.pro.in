#/* vim:set ts=2 nowrap: ****************************************************
#
# qutselect - A simple Qt4 based GUI frontend for SRSS (utselect)
# Copyright (C) 2009-2013 by Jens Langner <Jens.Langner@light-speed.de>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# $Id$
#
#**************************************************************************/

# main variables
TEMPLATE		= app
QT					= gui core network
CONFIG		 *= qt thread no_mocdepend warn_on @ANSI_COLOR@ @QTLINK_LEVEL@
TARGET			= qutselect
QMAKE_QMAKE = @QMAKE_PATH@
VERSION			= @PACKAGE_VERSION@
DESTDIR			= ../

# directory specification
unix {
  OBJECTS_DIR = .obj
  MOC_DIR     = .moc
  UI_DIR      = .ui
}
win32 {
  OBJECTS_DIR = _obj
  MOC_DIR     = _moc
  UI_DIR      = _ui
}

# define headers and source files for compilation
DEPENDPATH  = . includes
INCLUDEPATH = . includes

# find out the host os/cpu
HOST_OS=@HOST_OS@
HOST_CPU=@HOST_CPU@
HOST_MACHINE=@HOST_MACHINE@

# own QMAKE Flags definitions
QMAKE_CXXFLAGS_RELEASE = @CXXFLAGS@
QMAKE_CXXFLAGS_DEBUG	 = @CXXFLAGS@

# set the config to either release or debug
COMPILE_LEVEL = @COMPILE_LEVEL@
contains(COMPILE_LEVEL, debug) {
	CONFIG -= release
	CONFIG *= debug
	DEBUG = -DDEBUG
}
else {
	CONFIG -= debug
	CONFIG *= release
  DEBUG =
	QMAKE_LINK *= -s
}

QMAKE_EXTRA_VARIABLES = DEBUG
QMAKE_CXXFLAGS *= $(EXPORT_DEBUG)
QMAKE_CFLAGS *= $(EXPORT_DEBUG)

### QT LIB ################################################################
# if "staticqt" is specificed in the CONFIG variable (by configure)
# we link with the static QT library instead
staticqt {
  QMAKE_LIBS_QT =
  QMAKE_LIBS_QT_THREAD =
  !macx:LIBS *= $(QTDIR)/lib/libQtCore.a
  macx:LIBS *= $(QTDIR)/lib/libQtCore.a -lz -framework Carbon
}

### LIBRTDEBUG ############################################################
# if "staticrtdebug" is specified in the CONFIG variable (by configure)
# we link wih the static variant of librtdebug instead
INCLUDEPATH *= @RTDEBUG_INCDIR@
contains(COMPILE_LEVEL, debug) {
  staticrtdebug {
    LIBS *= @RTDEBUG_LIBDIR@/@LIB_RTDEBUG@
  }
  else {
    LIBS *= -L@RTDEBUG_LIBDIR@ @LIB_RTDEBUG@
  }

  message("linking with @LIB_RTDEBUG@")
}

# set the general compiler optimizations
QMAKE_CFLAGS_RELEASE = -O3 -fomit-frame-pointer
QMAKE_CXXFLAGS_RELEASE = -O3 -fomit-frame-pointer

# set defines so that we can identify the processor type later on
!mac {
  contains(HOST_MACHINE, x86_64) {
    DEFINES *= __X86_64__
  }
  contains(HOST_MACHINE, i[63]86) {
    DEFINES *= __i386__
  }
  contains(HOST_MACHINE, sun4u) {
    DEFINES *= __SPARC__
  }
  contains(HOST_MACHINE, Power.+) {
    DEFINES *= __POWERPC__
  }
}

!mac {
  contains(HOST_MACHINE, x86_64) {
    QMAKE_CFLAGS_RELEASE *= -mtune=native
    QMAKE_CXXFLAGS_RELEASE *= -mtune=native
  }
  contains(HOST_MACHINE, i[63]86) {
    QMAKE_CFLAGS_RELEASE *= -mtune=native
    QMAKE_CXXFLAGS_RELEASE *= -mtune=native
  }
  contains(HOST_MACHINE, sun4u) {
    QMAKE_CFLAGS_RELEASE *= -mcpu=ultrasparc3
    QMAKE_CXXFLAGS_RELEASE *= -mcpu=ultrasparc3
  }
  contains(HOST_MACHINE, Power.+) {
    QMAKE_CFLAGS_RELEASE *= -mcpu=powerpc
    QMAKE_CXXFLAGS_RELEASE *= -mcpu=powerpc
  }
}

# override the compile output
QMAKE_CXX  = @echo \'  CC   $<\'; $$QMAKE_CXX
QMAKE_LINK = @echo \'  LD   $@\'; $$QMAKE_LINK
QMAKE_MOC  = @echo \'  MOC  $@\'; $$QMAKE_MOC

# use ANSI colors if it was specified on configure time
ansi_color {
  DEFINES *= ANSI_COLOR
}
else {
  DEFINES -= ANSI_COLOR
}

# Input
RESOURCES = qutselect.qrc
TRANSLATIONS = lang/qutselect_de.ts

HEADERS = CApplication.h \
					CMainWindow.h \
          CLoginDialog.h
           
SOURCES = main.cpp \
					CApplication.cpp \
					CMainWindow.cpp \
          CLoginDialog.cpp
